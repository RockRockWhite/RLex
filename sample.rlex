%{
    pub struct Foo {
        x: i32,
        y: i32,
    }

    pub struct Bar {
        x: i32,
        y: i32,
    }
%}
    Digits = [0-9]
    Lowercase = [a-z]
    Uppercase = [A-Z]
    Letters = {Lowercase}|{Uppercase}
    Asciis = [ -~]
    Integers = {Digits}{Digits}*
    TypeIdentifiers = {Uppercase}({Letters}|{Digits}|_)*
    ObjectIdentifiers = {Lowercase}({Letters}|{Digits}|_)*
    Strings = "{Asciis}*"
    Keywords = class|else|false|fi|if|in|inherits|isvoid|let|loop|pool|then|while|case|esac|new|of|not|true
    WhiteSpace = ( |\n|\r|\f|\t|\v)*
    Comments = (--{Asciis}*\n)|\(\*{Asciis}*\*\)
    SpecialNotation = \(|\)|{|}|\.|:|<-|,|;|+|-|\*|/|<|<=|=|>=|>|~|&|\|
%%
    {Integers} -> |s|{
        println!("<Integers, {}>", s);
    } ;;
    {TypeIdentifiers} -> |s|{
        println!("<TypeIdentifiers, {}>", s);
    } ;;
    {ObjectIdentifiers} -> |s|{
        println!("<ObjectIdentifiers, {}>", s);
    } ;;
    {Strings} -> |s|{
        println!("<Strings, \"{}\">", s);
    } ;;
    {Comments} -> |s|{
        println!("<Comments, {}>", s.replace("\n", "\\n"));
    } ;;
    {Keywords} -> |s|{
        println!("<Keywords, {}>", s);
    } ;;
    {WhiteSpace} -> |s|{
        println!("<WhiteSpace, {}>", s.replace("\n", "\\n").replace("\r", "\\r"));
    } ;;
    {SpecialNotation} -> |s|{
        println!("<SpecialNotation, {}>", s);
    } ;;
%%
    pub a: i32,
    pub b: i64, 